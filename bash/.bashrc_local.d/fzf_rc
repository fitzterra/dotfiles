case $(uname -s) in
    "Linux")
        # Add the terminal keybindings if fzf is installed via the Debian package
        # manager. See /usr/share/doc/fzf/README.Debian
        if [ -f /usr/share/doc/fzf/examples/key-bindings.bash ]; then
            # The ALT-C (change dir) command from the default fzf bash key bindings
            # ignores dirs starting with a dot, thus hidden dirs. Luckily the script
            # has been set up very cleverly to allow us to override the command to what
            # we like before sourcing the key bindings file. We change it to prune all
            # '.git' dirs, but allow other hidden dirs
            FZF_ALT_C_COMMAND="command find -L . -mindepth 1 \\( -path '*/\\.git' -o -fstype 'sysfs' -o -fstype 'devfs' -o -fstype 'devtmpfs' -o -fstype 'proc' \\) -prune -o -type d -print 2> /dev/null | cut -b3-"
            # Now source the bindings
            source /usr/share/doc/fzf/examples/key-bindings.bash
        fi
        ;;
    "Darwin")
        # Add for MacOS if installed via homebrew
        # These settings comes from the ~/.fzf.bash file generated by
        # $(brew --prefix)/opt/fzf/install
        # After running that the ~/.fzf.bash file was deleted, the sourcing of
        # it in ~/.bashrc was removed, and it's content added below.
        if [ -d /opt/homebrew/opt/fzf ]; then
            # Setup fzf
            # ---------
            if [[ ! "$PATH" == */opt/homebrew/opt/fzf/bin* ]]; then
              export PATH="${PATH:+${PATH}:}/opt/homebrew/opt/fzf/bin"
            fi

            # Auto-completion
            # ---------------
            [[ $- == *i* ]] && source "/opt/homebrew/opt/fzf/shell/completion.bash" 2> /dev/null

            # Key bindings
            # ------------
            source "/opt/homebrew/opt/fzf/shell/key-bindings.bash"
        fi
        ;;
esac
