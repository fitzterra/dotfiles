# List of plugins to install in the vim-pathogen bundle dir.
# This file is sourced from the _post_setup.sh script and expect a 'plugins'
# associative array to have been declared with key/values as indicated.
#
# This list is version controlled and installed for all systems.
# To have plugins for a local system only, create a file called
# `plugins_local.txt' in the same directory as this file.
# This file can be then be used to define plugins for the local system only,
# and is not version controlled.
# See below for a template for `plugins_local.txt`


# Declare the associative array
declare -A plugins

plugins=(
    # [plugin-name]='https://git-clone/type/url/plugin-name.git'
    # The plugin-name will be used as the dir to clone the repo into
    [vim-tabular]='https://github.com/godlygeek/tabular.git'
    [vim-table-mode]='https://github.com/dhruvasagar/vim-table-mode.git'
    [vimwiki]='https://github.com/vimwiki/vimwiki.git'
    [vimwiki-git]='https://github.com/fitzterra/vimwiki-git.git'
    # Allows vim settings per dir/subdir. usefull for auto commit/push vimwiki
    # changes. See https://opensource.com/article/18/6/vimwiki-gitlab-notes
    [dirsettings]='https://github.com/chazy/dirsettings.git'
    [vim-airline]='https://github.com/vim-airline/vim-airline'
    [vim-fugitive]='https://github.com/tpope/vim-fugitive.git'
    [ale]='https://github.com/w0rp/ale.git'
    [supertab]='https://github.com/ervandew/supertab.git'
    [ack-vim]='https://github.com/mileszs/ack.vim.git'
    [graphviz-vim]='https://github.com/liuchengxu/graphviz.vim.git'
    # Get the sum of a visual selection of numbers
    [vissum-vim]='https://github.com/elazar/visSum.vim'
    [vim-gitgutter]='https://github.com/airblade/vim-gitgutter'
    # The second part of getting fzf functionality in Vim on a Debian based
    # system. Also see dotfiles/vim/.vim/plugin/fzf.vim
    [fzf-vim]='https://github.com/junegunn/fzf.vim'
    # Search the web from vim
    [vim-browser-search]='https://github.com/voldikss/vim-browser-search.git'
    # Run commands in the background - mostly for running a markdown viewer
    # while editing the MD file in vim. Also see: https://github.com/tpope/vim-dispatch
    # NOTE: This has been replaced by the `asynrun` plugin
    #[vim-dispatch]='https://tpope.io/vim/dispatch.git'
    # CSV managment. Also see https://vimtricks.com/p/vim-csv-files/
    [rainbow_csv]='https://github.com/mechatroner/rainbow_csv.git'
    # Easy swap windows/buffers in vim splits
    [vim-windowswap]='https://github.com/wesQ3/vim-windowswap.git'
    # Distraction free writing or presentation - also see the presenter.vim plugin
    [goyo]='https://github.com/junegunn/goyo.vim.git'
    # Line commenter and uncommenter by Tim Pope
    [vim-commentry]='https://github.com/tpope/vim-commentary.git'
    # Running processes asynchronously in vim - replaces `vim-dispatch` above
    [asyncrun]='https://github.com/skywind3000/asyncrun.vim.git'
    #### File Type Support and Syntax Highlighting plugins ####
    [vim-openscad]='https://github.com/sirtaj/vim-openscad.git'
    [vim-arduino-syntax]='https://github.com/sudar/vim-arduino-syntax.git'
    [edgedb-vim]='https://github.com/edgedb/edgedb-vim'
    # Gcode Syntax highlighting
    [gcode]='https://github.com/wilriker/gcode.vim.git'
    [vim-markdown]='https://github.com/preservim/vim-markdown.git'
    [vim-markdown-toc]='https://github.com/ajorgensen/vim-markdown-toc.git'
    [vim-json]='https://github.com/elzr/vim-json.git'
    [vim-mermaid]='https://github.com/chazmcgarvey/vim-mermaid.git'
    #### Color Schemes ####
    # Better color scheme, especially for diff views
    [apprentice]='https://github.com/romainl/Apprentice.git'
    [papercolor-theme]='https://github.com/NLKNguyen/papercolor-theme.git'
    [iceberg]='https://github.com/cocopon/iceberg.vim.git'
)

# Include any system local plugins found. We will source the
# 'plugins_local.txt` file in the same dir this file is located in. The local
# plugins file should look like this:
#
#----------8<--------8<----------
#declare -A plugins_local
#
#plugins_local=(
#   [plugin-name]='https://path/to/git/location.git'
#   [plugin-name]='https://path/to/git/location.git'
#   ...
#)
#
# vim: set syntax=sh:
#----------8<--------8<----------

# Since this file will be sourced, we can not use $0 to determine our path, but
# we can use $BASH_SOURCE. See bash manpage and also:
# https://unix.stackexchange.com/a/4653
MYDIR=$(dirname $BASH_SOURCE)
LOCFILE="${MYDIR}/plugins_local.txt"
if [ -f "$LOCFILE" ]; then
    # Source it
    source "$LOCFILE"
    # We assume plugins_local exists, so we stringify it
    p_loc="$(declare -p plugins_local)"
    # ... then strip of the declare bit
    p_loc=${p_loc#*=(}
    # ... and everything after the last double quote, replacing the quote again
    p_loc=${p_loc%\"*}\"
    # To combine 2 associative array, we need to nou also stringify plugins
    plugins="$(declare -p plugins)"
    # ... then strip of the declare bit
    plugins=${plugins#*=(}
    # ... and everything after the last double quote, replacing the quote again
    plugins=${plugins%\"*}\"
    # Then recreate the plugins array via eval
    eval "plugins=( $plugins $p_loc )"
fi

# vim: set syntax=sh:
